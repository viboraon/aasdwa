--[[
Disbelief Finale - Limb Reanimate
Melon - basically putting this all together
ZerX - movement scripting
Emper - Reanimate
And to all the talented animators

Notes: sry about the If statementsðŸ˜­
thanks to @Cybop_ and @adeadlymeow for some of the animation lists
]]

getgenv().Settings = {
Highlight = true,
HighlightColor = Color3.fromRGB(0, 255, 0),
MouseFollowsHead = true,

CoreAnimations = {
Idle = 136078657506707,
Walk = 130213485744288,
Jump = 84397577392351,
Fall = 90270295182351,
},

-- {Name = "", ID = 0, Speed = 0},
CustomAnimations = {
{Name = "Test", ID = 87243644733519},
}}


if game.CoreGui:FindFirstChild("FluxLib") then
game.CoreGui:FindFirstChild("FluxLib"):Destroy()
end

local Reanimate = loadstring(game:HttpGet("https://gist.githubusercontent.com/MelonsStuff/fe80f7f8c001853f271240b660db873b/raw/c33584728c55186f0916129037a2b7e8d398d75e/LimbReanimate.lua"))()
local Player = game:GetService("Players").LocalPlayer
local Name = game.Players.LocalPlayer.Name
local Character = workspace.non
local Head = Character.Head
local Torso = Character.Torso
local Neck = Torso.Neck
local NeckC0 = Neck.C0
local RootPart = Character.HumanoidRootPart
local Humanoid = Character.Humanoid
local Mouse = Player:GetMouse()
local Jumped,Falled,Idled,Walked = false,false,false,false
local AnimatorModule
local Anims = Instance.new("Folder", workspace)
local Quotes = {"Irony at its finest.", "Because not all things have legacies.", "This time, we actually tested it.", "You can actually read this one!"}
local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/fluxlib.txt"))()
local GUI = Lib:Window("Disbelief Hub", Quotes[math.random(1, #Quotes)], Color3.fromRGB(0, 0, 0), Enum.KeyCode.LeftControl)
local DancesA = GUI:Tab("Animations - R6 Dances", "http://www.roblox.com/asset/?id=6023426915")
local DancesB = GUI:Tab("Animations - Forsaken", "http://www.roblox.com/asset/?id=6023426915")
local DancesC = GUI:Tab("Animations - Oozy's R6", "http://www.roblox.com/asset/?id=6023426915")
local DancesD = GUI:Tab("Animations - Emote Haven", "http://www.roblox.com/asset/?id=6023426915")
local DancesE = GUI:Tab("Animations - Extras", "http://www.roblox.com/asset/?id=6023426915")
local DancesF = GUI:Tab("Animations - Custom", "http://www.roblox.com/asset/?id=6023426915")
local Forsaken = loadstring(game:HttpGet("https://raw.githubusercontent.com/MelonsStuff/DisbeliefHub/refs/heads/main/Scripts/Animations/ForsakenAnimations.lua"))()
local R6Dances = loadstring(game:HttpGet("https://raw.githubusercontent.com/MelonsStuff/DisbeliefHub/refs/heads/main/Scripts/Animations/R6DancesAnimations.lua"))()
local OozysR6Dances = loadstring(game:HttpGet("https://raw.githubusercontent.com/MelonsStuff/DisbeliefHub/refs/heads/main/Scripts/Animations/OozysR6DancesAnimations.lua"))()
local EmoteHaven = loadstring(game:HttpGet("https://raw.githubusercontent.com/MelonsStuff/DisbeliefHub/refs/heads/main/Scripts/Animations/EmoteHavenAnimations.lua"))()
local Extras = {
{Name = "Thosenwho know - Item Asylum", ID = 7205303819},
{Name = "Gangnam Style - Unknown", ID = 112386868626342},
{Name = "Palm Tree Panic - Emote Haven", ID = 15115509387},}

if getgenv().Settings.MouseFollowsHead == true then
AnimatorModule = loadstring(game:HttpGet("https://gist.githubusercontent.com/MelonsStuff/07fa41cf60cc9e2f0214c6057f71e3c4/raw/e54e21bb90ffa31099e9f797253fa159b358ab8c/NecklessAnimator"))()
else
AnimatorModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/MelonsStuff/DisbeliefHub/refs/heads/main/Scripts/AnimatorModule.lua"))()
end

if getgenv().Settings.Highlight == true then
local Highlight = Instance.new("Highlight", Character)
Highlight.DepthMode = Enum.HighlightDepthMode.Occluded
Highlight.FillTransparency = 1
Highlight.OutlineColor = getgenv().Settings.HighlightColor
end

function CreateAnimation(Name, ID)
local New = game:GetObjects("rbxassetid://"..ID)[1]
New.Parent = Anims
New.Name = Name
end

function LoadAnim(Rig, KeyFrameS)
if not AnimatorModule[Rig] then
AnimatorModule[Rig] = {}
end
AnimatorModule[Rig][KeyFrameS.Name] = AnimatorModule:LoadAnimation(Rig, KeyFrameS)
end

function PlayAnim(Rig, Animation, AnimFade, AnimSpeed)
if not AnimatorModule[Rig] then
AnimatorModule[Rig] = {}
end
if not AnimatorModule[Rig][Animation.Name] then
AnimatorModule[Rig][Animation.Name] = AnimatorModule:LoadAnimation(Rig, Animation)
end
for Animation, Track in next, AnimatorModule[Rig] do
if Animation ~= Animation.Name then
Track:Stop()
end
end
if not AnimatorModule[Rig][Animation.Name].IsPlaying then
AnimatorModule[Rig][Animation.Name]:Play(AnimFade or 1, AnimSpeed or 1)
end
end

function StopAnim(Rig, Anim)
if not AnimatorModule[Rig] then
AnimatorModule[Rig] = {}
end
if not AnimatorModule[Rig][Anim.Name] then
AnimatorModule[Rig][Anim.Name] = AnimatorModule:LoadAnimation(Rig, Anim)
end
AnimatorModule[Rig][Anim.Name]:Stop()
end

for i, v in pairs(R6Dances) do
if v.Divider then
DancesA:Line()
else
DancesA:Button(v.Name, v.Name, function()
if not Anims:FindFirstChild(v.Name) then
CreateAnimation(v.Name, v.ID)
end
PlayAnim(Character, Anims[v.Name], 0, v.Speed or 1)
end)
end
end

for i, v in pairs(Forsaken) do
if v.Divider then
DancesB:Line()
else
DancesB:Button(v.Name, v.Name, function()
if not Anims:FindFirstChild(v.Name) then
CreateAnimation(v.Name, v.ID)
end
PlayAnim(Character, Anims[v.Name], 0, v.Speed or 1)
end)
end
end

for i, v in pairs(OozysR6Dances) do
if v.Divider then
DancesC:Line()
else
DancesC:Button(v.Name, v.Name, function()
if not Anims:FindFirstChild(v.Name) then
CreateAnimation(v.Name, v.ID)
end
PlayAnim(Character, Anims[v.Name], 0, v.Speed or 1)
end)
end
end

for i, v in pairs(EmoteHaven) do
DancesD:Button(v.Name, v.Name, function()
if not Anims:FindFirstChild(v.Name) then
CreateAnimation(v.Name, v.ID)
end
PlayAnim(Character, Anims[v.Name], 0, v.Speed or 1)
end)
end

for i, v in pairs(Extras) do
DancesE:Button(v.Name, v.Name, function()
if not Anims:FindFirstChild(v.Name) then
CreateAnimation(v.Name, v.ID)
end
PlayAnim(Character, Anims[v.Name], 0, v.Speed or 1)
end)
end

for i, v in pairs(getgenv().Settings.CustomAnimations) do
DancesF:Button(v.Name, v.Name, function()
if not Anims:FindFirstChild(v.Name) then
CreateAnimation(v.Name, v.ID)
end
PlayAnim(Character, Anims[v.Name], 0, v.Speed or 1)
end)
end

CreateAnimation("Idle", getgenv().Settings.CoreAnimations.Idle)
CreateAnimation("Walk", getgenv().Settings.CoreAnimations.Walk)
CreateAnimation("Jump", getgenv().Settings.CoreAnimations.Jump)
CreateAnimation("Fall", getgenv().Settings.CoreAnimations.Fall)

 
game:GetService("RunService").Heartbeat:Connect(function(dt)
for i,v in pairs(Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()) do
v:Stop(0)
end
local HitFloor, HitPosition = workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character)
TorsoVelocity = (RootPart.Velocity).Magnitude
TorsoVerticalVelocity = RootPart.Velocity.Y
if TorsoVerticalVelocity > 1 and HitFloor == nil then
if Jumped == false then
Jumped = true
PlayAnim(Character, Anims.Jump, 0.1, 1)
end
Falled = false
Idled = false
Walked = false
StopAnim(Character, Anims.Fall)
StopAnim(Character, Anims.Idle)
StopAnim(Character, Anims.Walk)
elseif TorsoVerticalVelocity < 1 and HitFloor == nil then
if Falled == false then
Falled = true
PlayAnim(Character, Anims.Fall, 0.1, 1)
end		
Jumped = false
Idled = false
Walked = false
StopAnim(Character, Anims.Jump)
StopAnim(Character, Anims.Idle)
StopAnim(Character, Anims.Walk)
elseif TorsoVelocity < 1 and HitFloor ~= nil then
if Idled == false then
Idled = true
PlayAnim(Character, Anims.Idle, 0.1, 0.1)
end
Jumped = false
Falled = false
Walked = false
StopAnim(Character, Anims.Jump)
StopAnim(Character, Anims.Fall)
StopAnim(Character, Anims.Walk)
elseif TorsoVelocity > 1 and HitFloor ~= nil then
if Walked == false then
Walked = true
PlayAnim(Character, Anims.Walk,0.1,1)
end
Jumped = false
Falled = false
Idled = false
StopAnim(Character, Anims.Jump)
StopAnim(Character, Anims.Fall)
StopAnim(Character, Anims.Idle)
end
if getgenv().Settings.MouseFollowsHead == true then
Humanoid.CameraOffset = Humanoid.CameraOffset:Lerp((RootPart.CFrame * CFrame.new(0, 1.5, 0)):PointToObjectSpace(Head.Position),  math.clamp(8 * 60 * 60, 0, 1))
Neck.C0 = Neck.C0:Lerp(NeckC0 * CFrame.Angles(math.atan((Head.Position - Mouse.Hit.Position).Unit.Y), 0,  (Head.Position - Mouse.Hit.Position).Unit:Cross(Torso.CFrame.LookVector).Y), math.clamp(8 * dt, 0, 1))
-- ^ rewritten from the forbidden script, not skidded nor directly stolen.
end
end)
